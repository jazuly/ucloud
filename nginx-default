##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.php;
	server_name ainocloud.com;

# handle requests to the API
    location ~ /api/v2/(.+)$ {
        if (!-e $request_filename) { rewrite ^/api/v2/(.*) /api/v2/index.php?_page_url=$1 last; }
}

location / {
if (!-e $request_filename) {
                rewrite ^/(.*) /index.php?_page_url=$1 last;
        }
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
 if (!-e $request_filename) { rewrite ^/(.*) /index.php?_page_url=$1 last; }
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    }

location /files/ {
        internal;
    }

    location ~ /\.ht {
        deny all;
    }
# these locations would be hidden by .htaccess normally
    location /core/logs/ {
        deny all;
    }
}




#	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
#		try_files $uri $uri/ =404;
#	}

	# pass PHP scripts to FastCGI server
	#
#	location ~ \.php$ {
#		include snippets/fastcgi-php.conf;
	
		# With php-fpm (or other unix sockets):
#		fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
		# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
#	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
#		deny all;
#	}
#}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name ainocloud.com;
#
#	root /var/www/html;
#	index index.php index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#
#location ~ \.php$ {
#        include snippets/fastcgi-php.conf;
#       fastcgi_pass unix:/run/php/php7.0-fpm.sock;
#  }
#
#   location ~ /\.ht {
#        deny all;
#    }
#}
